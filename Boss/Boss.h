#ifndef _BOSS_H_
#define _BOSS_H_
/*
*=====*=====*=====*=====*=====*=====*=====*=====*=====*=====*=====*=====*=====*
*                                                                             *
*                              RT-BOSS (Header File)                          *
*                                                                             *
*=====*=====*=====*=====*=====*=====*=====*=====*=====*=====*=====*=====*=====*
*/

/*
*=============================================================================*
*                             RT-BOSS 파일 구성도                             *
*-----------------------------------------------------------------------------*

    Boss_Conf.h
       │
       │
       └─> Boss_Kernel.h ───────> Boss_Kernel.c
                │   │
                │   └─────────> ../Boss_Port/MCU_Port_File.c
                │
                │
                ├─> Boss_Sem.h ────> Boss_Sem.c
                │
                ├─> Boss_Tmr.h ────> Boss_Tmr.c
                │
                ├─> Boss_Q_Msg.h ───> Boss_Q_Msg.c
                │
                ├─> Boss_Q_Mail.h -──> Boss_Q_Mail.c
                │
                └─> Boss_Mem.h ────> Boss_Mem.c
    

    * Tmr / Q_Msg / Q_Mail 사용시 종속 함수.
    - Boss_Tmr    : _BOSS_TMR_ALLOC() / _BOSS_TMR_FREE()
    - Boss_Q_Mail : _BOSS_MAIL_Q_BOX_ALLOC() / _BOSS_MAIL_Q_BOX_FREE()
    - Boss_Q_Msg  : _BOSS_MSG_FIFO_ALLOC() / _BOSS_MSG_FIFO_FREE()


 
    Boss_Conf.h -──>─┐
    Boss_Kernel.h -─>─┤
    Boss_Sem.h ───>─┤
    Boss_Tmr.h ───>─┤
    Boss_Q_Msg.h ──>─┤
    Boss_Q_Mail.h -─>─┤ 
    Boss_Mem.h ───>─┴──>> Boss.h
                                 │
                                 ├─> Boss_conf.c
                                 │
                                 └─> 사용자파일.c



*=============================================================================*
*                  RT-BOSS 태스크 상태 천이도 (task_status)                   *
*-----------------------------------------------------------------------------*
                  
                        ┏━━━━━━━━━━━┓
                ┌──>>┃  ISR (인터럽트 실행) ┠──┬─┐
                │      ┗━━━━━━━━━━━┛    │  │
                │                                    │  │
                ⑥                                    ⑦  │
                │                                    │  │
                │        ┏━━━━━━━━━┓      │  │
                └────┨                  ┃<<──┘  │
                          ┃    [ Running ]   ┃          │
          ┌───────┨                  ┃          │
          │              ┃                  ┃          ⑧
          │  ┌────>>┃   실행중인 상태  ┃          │
          │  │    ┌─>>┃                  ┠──┐    │
          │  │    │    ┗━━━━━━━━━┛    │    │
          │  │    │                              │    │
          ③  │    ⑤                              ④    │
          │  │    │                              │    │ 
          │  │    │    ┏━━━━━━━━━┓    │    │
          │  │    └──┨   [ Suspend ]    ┃<<─┘    │
          │  │          ┃                  ┃          │
          │  ②          ┃ 실행중 보류 상태 ┃<<────┘
          │  │          ┗━━━━━━━━━┛
          │  │ 
          │  │          ┏━━━━━━━━┓
          │  └─────┨    [ Ready ]   ┃
          │              ┃                ┃<<── 태스크 생성
          │      ┌──>>┃ 실행 대기 상태 ┃
          │      │      ┗━━━━━━━━┛
          │      │
          │      ①
          │      │
          │      │      ┏━━━━━━━━┓
          │      └───┨  [ Waiting ]   ┃
          │              ┃                ┃
          └──────>>┃시그널 대기 상태┃
                          ┗━━━━━━━━┛


① : 시그널을 받을때 "Boss_sigs_send()"

② : 실행 대기 태스크중 최상위 테스크 일때
     
③ : 태스크가 모든 일을 처리 했을때, Boss_wait() 실행시
   
④ : 현재 실행중인 태스크 보다 높은 우선순위 태스크가 실행될때
     현재 태스크는 실행 대기상태가 됨
     
⑤ : 실행 대기 태스크중 최상위 테스크 일때
     자신 보다 높은 우선순위의 태스크가 모두 실행 되었을때

⑥ : 태스크 실행중 인트럽트가 발생 할때

⑦ : 인트럽트 실행 후 대기 태스크중 최상위 테스크 일때

⑧ : 인트럽트에서 현재 실행 중인 태스크보다 높은 우선순위의
     태스크가 실행 대기 상태가 될때

* Running / Suspend / Ready 상태의 태스크는 스케줄러 리스트(_sched_tcb_list)에
  우선순위로 정렬 되어 있음

* Ready / Suspend 태스크는 실행 가능한 실행 대기 상태 이다
   - Ready   : 시그널 수신 후 실행 되지 않은 상태
   - Suspend : 시그널 수신 후 실행 중 임시 중지된 상태
*/


/*===========================================================================*/
/*                               INCLUDE FILE                                */
/*---------------------------------------------------------------------------*/
#include "Boss_Conf.h"
#include "Boss_Kernel.h"
#include "Boss_Sem.h"
#include "Boss_Tmr.h"
#include "Boss_Q_Mail.h"
#include "Boss_Q_Msg.h"
#include "Boss_Mem.h"

#endif  /* _BOSS_H_ */
